services:
    minio:
      restart: always
      image: quay.io/minio/minio
      container_name: minio_container
      ports:
        - "0.0.0.0:9005:9005"
        - "0.0.0.0:9006:9006"
      command: server /data --console-address ':9006' --address ':9005'
      environment:
        - MINIO_ROOT_USER=${MINIO_ROOT_USER}
        - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      volumes:
        - minio_data:/data
      networks:
        - mlops-network

    postgres:
      image: postgres:latest
      container_name: postgres_hackupc
      restart: always
      environment:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
      ports:
        - "0.0.0.0:5433:5432"

      volumes:
        - postgres_data:/var/lib/postgresql/data
      networks:
        - mlops-network

    fastapi:
      build:
        context: ..
        dockerfile: devops/api.Dockerfile
      container_name: fastapi_app
      volumes:
        - ${PWD}:/app
      networks:
        - mlops-network
      ports:
        - "0.0.0.0:8000:8000"
      environment:
        - PYTHONUNBUFFERED=1
      restart:
        always
      depends_on:
        - mlserver
        - postgres
    mlserver:
        environment:
            - STAGE=${STAGE}
            - PROJECT_NAME=${PROJECT_NAME}
            - MOUNT_PATH=${MOUNT_PATH}
            - PYTHONPATH=${PYTHONPATH}
            - AWS_REQUEST_CHECKSUM_CALCULATION=when_required
            - AWS_RESPONSE_CHECKSUM_VALIDATION=when_required
        build:
          context: ..
          dockerfile: devops/Dockerfile
          args:
            STAGE: ${STAGE}
        image: ${PROJECT_NAME}:${STAGE}
        network_mode: "host"
        container_name: ${PROJECT_NAME}-${STAGE}-container
        ports:
            - "8050:8050"
        deploy:
          resources:
            reservations:
              devices:
                - driver: "nvidia"
                  count: "all"
                  capabilities: ["gpu"]
        privileged: true
        volumes:
          - ${MOUNT_PATH}
          - /root/.cache:/root/.cache
        stdin_open: true
        tty: true
        restart: always
        command: mlserver start config

volumes:
    minio_data:
        driver: local
        driver_opts:
            type: none
            o: bind
            device: /home/agarcia/minio_hackupc/
    postgres_data:
        driver: local

networks:
    mlops-network:
        driver: bridge
